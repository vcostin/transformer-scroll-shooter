name: Deploy to GitHub Pages

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true  # Cancel previous runs if new one starts

jobs:
  deploy:
    # Only run on branch pushes, not tag pushes
    if: github.ref_type == 'branch'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
        
      - name: Run tests
        run: npm run test:run
        
      - name: Generate coverage report
        run: npm run test:coverage
        
      - name: Upload coverage reports as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-deploy
          path: coverage/
          retention-days: 30
          
      - name: Generate coverage summary
        run: |
          echo "## 📊 Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Percentage |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|------------|" >> $GITHUB_STEP_SUMMARY
          
          # Extract coverage percentages from the test output
          npm run test:coverage 2>&1 | grep -E "All files.*%" | head -1 | \
          sed 's/.*|\s*\([0-9.]*\).*|\s*\([0-9.]*\).*|\s*\([0-9.]*\).*|\s*\([0-9.]*\).*/| Statements | \1% |\n| Branches | \2% |\n| Functions | \3% |\n| Lines | \4% |/' >> $GITHUB_STEP_SUMMARY || echo "| Coverage | See artifacts |" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📋 **View detailed coverage report in the artifacts section**" >> $GITHUB_STEP_SUMMARY
          echo "🔍 **Download the coverage-reports-deploy artifact to view HTML report**" >> $GITHUB_STEP_SUMMARY
        
      - name: Build project
        run: npm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
